version: '3'

services:

  ################
  # postgrest-db #
  ################
  postgres:
    container_name: postgres
    # image: postgres:13-alpine
    image: galien0xffffff/postgres-debugger:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_ANON_ROLE=${DB_ANON_ROLE}
      - DB_SCHEMA=${DB_SCHEMA}
    volumes:
      # anything in initdb directory is created in the database
      # see "How to extend this image" section at https://hub.docker.com/r/_/postgres/
      - "./initdb:/docker-entrypoint-initdb.d"
      # - ./pgdata:/var/lib/postgresql/data
    networks:
      - postgrest-backend
    restart: always

  ##################
  # postgrest-demo #
  ##################
  postgrest-demo:
    container_name: postgrest-demo
    image: nginx:mainline-alpine
    ports:
      - "80:80"
    volumes:
      # anything in html directory is hosted via nginx
      - "./html:/usr/share/nginx/html"
    restart: always

  #############
  # postgrest #
  #############
  postgrest:
    container_name: postgrest
    image: postgrest/postgrest:latest
    ports:
      - "3000:3000"
    # Available environment variables documented here:
    # https://postgrest.org/en/latest/configuration.html#environment-variables
    environment:
      # The standard connection URI format, documented at
      # https://www.postgresql.org/docs/current/static/libpq-connect.html#LIBPQ-CONNSTRING
      - PGRST_DB_URI=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      # The name of which database schema to expose to REST clients
      - PGRST_DB_SCHEMA=${DB_SCHEMA}
      # The database role to use when no client authentication is provided
      - PGRST_DB_ANON_ROLE=${DB_ANON_ROLE}
      # Overrides the base URL used within the OpenAPI self-documentation hosted at the API root path
      - PGRST_OPENAPI_SERVER_PROXY_URI=http://localhost:3000
    networks:
      - postgrest-backend
    restart: always
    depends_on:
      - postgres

  ##############
  # swagger-ui #
  ##############
  swagger-ui:
    container_name: swagger-ui
    image: swaggerapi/swagger-ui:latest
    ports:
      - "8080:8080"
    environment:
      - API_URL=http://localhost:3000/
    restart: always

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4
    restart: always
    ports:
      - "5050:80"
    networks:
      - postgrest-backend
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PG_ADMIN_PASSWORD}
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  keycloak:
    image: quay.io/keycloak/keycloak:18.0
    container_name: keycloak
    command: "start-dev"
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: ${POSTGRES_USER}
      DB_SCHEMA: public
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "ssl=true"
    ports:
      - "9998:8080"
    depends_on:
      - postgres
    networks:
      - postgrest-backend

networks:
  postgrest-backend:
    driver: bridge

volumes:
  pgdata:
#    external: true
  pgadmin-data:
     external: true
