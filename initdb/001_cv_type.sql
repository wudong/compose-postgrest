create type gender as enum ('male', 'female');

create type gender_restriction as enum ('male', 'female', 'mix');

create type competition_type as enum ('single', 'double', 'team');

create type age_restriction as enum ('open', 'u11', 'u13', 'u15', 'u17', 'u19', 'u21', 'o40', 'o50', 'o60', 'o70', 'o80');

create type competition_status as enum ('open', 'closed', 'cancelled');
create type competition_result as enum ('win', 'lose', 'draw', 'pending');

create type user_role as enum ( 'system_admin', 'event_admin','venue_admin', 'club_admin', 'player', 'referee', 'coach' );

create type tag_type  as enum ('player', 'club', 'event', 'venue');

create table tags
(
    id   integer generated by default as identity
        constraint tag_pkey
            primary key,
    type tag_type not null, -- which type of object this tag is for.
    name text not null
);

insert into tags ( type, name)
values ('event', 'boys'),
       ('event', 'girls'),
       ('event', 'men'),
       ('event', 'women'),
       ('event', 'mix'),
       ('event', 'veteran'),
       ('event', 'single'),
       ('event', 'double'),
       ('event', 'mix double'),
       ('event', 'team')
ON CONFLICT ON CONSTRAINT tag_pkey do nothing;